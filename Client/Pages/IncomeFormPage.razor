@page "/income-form/{id}"
@using DissertationArtefact.Shared
@inject HttpClient Http
@inject NavigationManager NavManager

<h1>Income Form</h1>

@if (income == null)
{
    <p><em>Loading income</em></p>
}
else
{

    <div>
        <label for="">Name: </label>
        <input @bind="@income.LabelName" />
    </div>

    <div>
        <label for="">Payment Date:</label>
        <input @bind="@income.PaymentDate" @bind:format="yyyy-MM-dd" />
    </div>

    <div>
        <label for="">Frequency: </label>
        <select @bind="income.Frequency">
            <option value="@IncomeFrequencies.Annually">@nameof(IncomeFrequencies.Annually)</option>
            <option value="@IncomeFrequencies.Monthly">@nameof(IncomeFrequencies.Monthly)</option>
            <option value="@IncomeFrequencies.Weekly">@nameof(IncomeFrequencies.Weekly)</option>
            <option value="@IncomeFrequencies.OneTime">@nameof(IncomeFrequencies.OneTime)</option>
        </select>
    </div>

    <div>
        <label for="">Sender: </label>
        <input @bind="@income.SenderName" />
    </div>

    <div>
        <label for="">Amount: </label>
        <input @bind="@income.Amount" />
    </div>

    <!--Bootstrap button, look into syncfusion-->
    <button class="btn btn-danger" @onclick="@(async () => await Cancel())">Cancel</button>
    <button class="btn btn-success" @onclick="@(async () => await Save())">OK</button>

}



@code {

    [Parameter]
    public string id { get; set; }

    private Income income;

    protected override async Task OnInitializedAsync()
    {
        if (id == new Guid().ToString())
        {
            income = new Income
            {
                Frequency = IncomeFrequencies.Monthly,
                PaymentDate = DateTime.Now
            };
        }
        else
        {

            income = await Http.GetFromJsonAsync<Income>($"income/{id}");

            if (income is null)
            {
                //income = new Income();
            }
        }
    }

    protected async Task Save()
    {
        var result = await Http.PostAsJsonAsync("income", income, null);

        NavManager.NavigateTo("income");
    }

    protected async Task Cancel()
    {
        NavManager.NavigateTo("income");
    }
}


