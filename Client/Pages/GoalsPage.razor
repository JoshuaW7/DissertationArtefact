@page "/goals"
@using DissertationArtefact.Shared
@inject HttpClient Http
@inject NavigationManager NavManager



@if (goals == null)
{
    <p><em>...</em></p>
}
else
{
    <h1>Goals 
        <button class="btn btn-primary" @onclick="@(() => NavManager.NavigateTo($"/goal"))">
            <span class="oi oi-plus" aria-hidden="true"></span>
        </button>
    </h1>
    
    foreach (var goal in goals)
    {
        
        <NavLink class="nav-link" href="@($"goal/{goal.Id}")">
            <span aria-hidden="true"></span>
            <button class="btn btn-info btn-lg">
                <div>@goal.GoalName</div>
                <div>£@goal.TargetAmount</div>
            </button>
        </NavLink>
    }


}


@code {

    [Parameter]
    public string id { get; set; }

    private User user;
    private List<Goal> goals;
    private List<Income> incomes;
    private List<Expense> expenses;
    private Goal goal;
    private PlutoFunctions plutoFunctions;


    protected override async Task OnInitializedAsync()
    {
        string abc = "6091a3f06dbeb16f2aa3abd4";
        user = await Http.GetFromJsonAsync<User>($"api/users/{abc}");
        goals = await Http.GetFromJsonAsync<List<Goal>>($"api/goal/user/{user.Id}");

        //if (id == new Guid().ToString()) //(string.IsNullOrEmpty(id)) ...not sure what this is for.. might be tired eyes
        //{
        //    goal = new Goal
        //    {
        //        CreationDate = DateTime.Now,
        //        UserId = user.Id
        //    };
        //}
        //else
        //{
        //    goal = await Http.GetFromJsonAsync<Goal>($"api/goal/{id}");

        //    if (goal is null)
        //    {
        //        //expense = new Expense();
        //    }
        //}
    }
}